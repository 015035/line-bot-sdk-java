/*
 * Copyright 2016 LINE Corporation
 *
 * LINE Corporation licenses this file to you under the Apache License,
 * version 2.0 (the "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at:
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */

// ./gradlew clean && ./gradlew uploadArchives -Prelease

buildscript {
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url 'http://repo.spring.io/plugins-release' }
    }
    dependencies {
        classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.7'
        classpath "gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:1.4.11"
    }
}

apply plugin: 'idea'

group = "com.linecorp.bot"
version = '0.0.1'

//set build variables based on build type (release, continuous integration, development)
def isDevBuild
def isReleaseBuild
def sonatypeRepositoryUrl
if (hasProperty("release")) {
    isReleaseBuild = true
    sonatypeRepositoryUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
} else if (hasProperty("ci")) {
    version += "-SNAPSHOT"
    sonatypeRepositoryUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
} else {
    isDevBuild = true
    version += "-SNAPSHOT"
}

subprojects {
    apply plugin: 'propdeps'
    apply plugin: 'propdeps-maven'
    apply plugin: 'propdeps-idea'
    apply plugin: 'propdeps-eclipse'
    apply plugin: 'findbugs'
    apply plugin: 'java'
    apply plugin: "com.gorylenko.gradle-git-properties"

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    group = rootProject.group
    version = rootProject.version

    jar {
        manifest {
            attributes 'Implementation-Title': project.name,
                    'Implementation-Version': version
        }
    }

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from "${buildDir}/javadoc"
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    compileJava {
        options.compilerArgs << '-XDignore.symbol.file' << '-Xlint:all'
    }

    artifacts {
        archives javadocJar, sourcesJar
    }
}

[':line-bot-api-client', ':line-bot-model', ':line-bot-servlet', ':line-bot-spring-boot'].each { projectName ->
    project(projectName) { project ->
        apply plugin: 'signing'
        apply plugin: 'maven'

        signing {
            required { isReleaseBuild }
            sign configurations.archives
        }

        uploadArchives {
            repositories {
                if (isDevBuild) {
                    mavenLocal()
                } else {
                    mavenDeployer {
                        if (isReleaseBuild) {
                            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
                        }

                        repository(url: sonatypeRepositoryUrl) {
                            authentication(userName: sonatypeUsername, password: sonatypePassword)
                        }

                        pom.project {
                            name project.name
                            packaging 'jar'
                            description project.description
                            url 'https://github.com/line/line-bot-sdk-java'

                            scm {
                                url "scm:git@github.com:line/line-bot-sdk-java.git"
                                connection "scm:git@github.com:line/line-bot-sdk-java.git"
                                developerConnection "scm:git@github.com:line/line-bot-sdk-java.git"
                            }
                            licenses {
                                license {
                                    name 'Apache'
                                    url 'https://opensource.org/licenses/Apache-2.0'
                                }
                            }
                            developers {
                                developer {
                                    id 'tokuhirom'
                                    name 'Tokuhiro Matsuno'
                                    email 'tokuhirom@gmail.com'
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

repositories {
    mavenCentral()
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.12'
}
